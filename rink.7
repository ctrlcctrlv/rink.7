.\" Automatically generated by Pandoc 3.0.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "rink" "7" "2023-04-25" "" ""
.hy
.SH 
.SH SYNOPSIS
.PP
\f[V]rink [OPTIONS] [EXPR]...\f[R]
.SH ARGS
.PP
\f[V]<EXPR>...\f[R]
.IP \[bu] 2
Evaluate a list of expressions.
If no arguments are provided, an interactive session will start.
.SH OPTIONS
.PP
\f[V]--config-path\f[R]
.IP \[bu] 2
Prints a path to the config file, then exits
.PP
\f[V]-f\f[R], \f[V]--file <file>\f[R]
.IP \[bu] 2
Reads expressions from a file
.PP
\f[V]-h\f[R], \f[V]--help\f[R]
.IP \[bu] 2
Print help information
.PP
\f[V]-V\f[R], \f[V]--version\f[R]
.IP \[bu] 2
Print version information
.SH INTRODUCTION
.PP
Rink is a unit conversion and calculation tool which can be used for
both small and simple arithmetic and more complex dimensionality
analysis and other tasks.
In this manual, each section will have examples of the discussed
material at the top.
.SH TABLE OF CONTENTS
.IP "1." 3
Working with units
.RS 4
.IP "1." 3
Weight vs Mass
.RE
.IP "2." 3
Expressions
.RS 4
.IP " 1." 4
Writing Numbers
.IP " 2." 4
Multiplication
.IP " 3." 4
Division
.IP " 4." 4
Addition, Subtraction
.IP " 5." 4
Temperatures
.IP " 6." 4
Numbers
.IP " 7." 4
Powers
.IP " 8." 4
Inline unit definitions
.IP " 9." 4
Custom base units
.IP "10." 4
Accessing the previous result
.RE
.IP "3." 3
Units and prefixes
.IP "4." 3
Top-level statements
.RS 4
.IP "1." 3
Conversions (->)
.RS 4
.IP "1." 3
Unit lists
.IP "2." 3
Temperature
.IP "3." 3
Bases
.IP "4." 3
Digits
.RE
.IP "2." 3
Unit finding
.IP "3." 3
Factorization
.IP "4." 3
Search
.RE
.IP "5." 3
Dates
.IP "6." 3
Substances
.IP "7." 3
Index of Units
.RS 4
.IP "1." 3
Official SI Derived Units
.IP "2." 3
Substances
.IP "3." 3
Constants
.IP "4." 3
Currencies
.IP "5." 3
Functions
.RE
.SH WORKING WITH UNITS
.PP
In order to understand Rink, an understanding of units themselves is
required.
Fundamentally, a \f[I]unit\f[R] is a way of assigning a concrete value
to a specific \f[I]quantity\f[R] such as length, volume, energy, power,
current, etc.
Each \f[I]quantity\f[R] can be reduced into other quantities (for
example, area is length x length), except for 7 \f[I]base units\f[R].
.PP
The 7 \f[I]base units\f[R] (as well as their SI \f[I]units\f[R]):
.IP \[bu] 2
Length (meters)
.IP \[bu] 2
Time (seconds)
.IP \[bu] 2
Mass (kilograms)
.IP \[bu] 2
Current (amperes)
.IP \[bu] 2
Temperature (kelvin)
.IP \[bu] 2
Amount of Substance (mol)
.IP \[bu] 2
Human-subjective brightness of light (candela)
.PP
In addition, Rink defines a few non-SI base units:
.IP \[bu] 2
Money (Euro)
.IP \[bu] 2
Information (bit)
.IP \[bu] 2
Radian
.IP \[bu] 2
Steradian
.IP \[bu] 2
Musical note length (wholenote)
.IP \[bu] 2
Biological activity (IU)
.PP
Each of these quantities is treated as irreducible.
The 7 base units are the foundations of SI, and customary systems as
well.
(Customary systems are defined in terms of SI.)
.PP
Every \f[I]unit\f[R] is composed of two parts: A numerical value, and
its \f[I]dimensionality\f[R].
The dimensionality is how a unit relates itself to the \f[I]base
units\f[R].
Each base unit is raised to a certain power to construct the
dimensionality.
For example, the dimensionality of the quantity of acceleration is
length\[ha]1 * time\[ha]-2 and then the rest of the base units are to
the 0th power, which is to say that they do not matter.
Two units are considered \f[I]conformable\f[R] if they have matching
dimensionalities, and they can then be used in conversions.
.PP
Because each unit has a numerical part, it is possible to do normal math
on them.
.IP \[bu] 2
Adding two units produces a new unit with matching dimensionality.
.IP \[bu] 2
Multiplying two units produces a new unit with its dimensionality as
each base unit multiplied together, e.g.
velocity (length time\[ha]-1) * hertz (time\[ha]-1) = acceleration
(length time\[ha]-2).
.IP \[bu] 2
Dividing two units is like multiplication, but taking away from the base
units.
A unit divided by itself is \f[I]dimensionless\f[R], it has no quantity.
Normal numbers are dimensionless.
.PP
Because of this, units are essentially just numbers.
As such, Rink is essentially a calculator which takes dimensionality
into account.
.SH WEIGHT VS MASS
.PP
It is important to remember the differences between mass and weight when
working with mass and force units.
Here are some tips:
.IP \[bu] 2
Mass doesn\[aq]t change depending on the amount of gravity, and directly
influences momentum.
.IP \[bu] 2
Weight is the amount of downward force on an object due to gravity.
.IP \[bu] 2
Mass is measured in kilograms or pounds.
.IP \[bu] 2
Weight is measured in newtons, kilogram force (kgf), or pound force
(lbf).
.IP \[bu] 2
When someone says something weighs some amount of kg or lb, they\[aq]re
saying it has a weight of that number of kgf or lbf.
This includes things like weight on the moon.
(Don\[aq]t correct anyone using this common figure of speech.)
.IP \[bu] 2
A scale displays an estimate of mass by measuring the force applied to
it divided by its calibrated measurement of the acceleration of gravity.
Its mass estimate would be incorrect on other planets unless it was
recalibrated.
You can also think of the displayed value as being weight in kgf or lbf.
.IP \[bu] 2
You can compute weight by multiplying mass by gravity.
Both kgf and lbf have earth gravity as part of their definition, so when
you multiply kg or lb by gravity you get the same numerical values back,
but with kgf or lbf units.
.SH EXPRESSIONS
.SS WRITING NUMBERS
.IP
.nf
\f[C]
> 10.1e2
1010 (dimensionless)
> 10
10 (dimensionless)
> 0x10
16 (dimensionless)
> 0o10
8 (dimensionless)
> 0b10
2 (dimensionless)
\f[R]
.fi
.PP
Decimal numbers can be written with an integer component, an
after-decimal-point component, and an exponent.
Numbers can optionally have either \f[V]U+2009 THIN SPACE\f[R] or an
underscore (\f[V]_\f[R]) for digit place separators.
.PP
The decimal point is always written with a dot (\f[V].\f[R]), not a
comma or other marker.
If the decimal point is provided, it must be followed by more digits.
(\f[V]1.\f[R] is not allowed.)
.PP
The exponent starts with an \f[V]e\f[R], followed by an integer with an
optional sign.
The exponent is shorthand for writing out \f[V]* 10\[ha]exp\f[R].
There can be no spaces within the number other than allowed digit
separators.
(\f[V]10 e10\f[R] is not allowed.)
.PP
Hexadecimal, octal, and binary integers can be written using
\f[V]0x\f[R], \f[V]0o\f[R], and \f[V]0b\f[R] prefixes, respectively.
These literals do not currently support decimal points or exponents.
.SS MULTIPLICATION
.IP
.nf
\f[C]
> 3 4 m 5 s
60 m s
> 3 * 4 m 5 s
60 m s
\f[R]
.fi
.PP
Multiplication can be either by juxtaposition (that is, without any
symbol) or using an explicit * operator.
.SS DIVISION
.IP
.nf
\f[C]
> 10 km / 5 m
2000 (dimensionless)
> 1|2 m
0.5 m (length)
\f[R]
.fi
.PP
There are two division operators, for separate purposes.
\f[V]/\f[R] has lower precedence than multiplication, and is used mainly
for separating two halves of an entire expression.
\f[V]|\f[R] has higher precedence than multiplication, and is used
mainly for fractions of integers.
.SS ADDITION, SUBTRACTION
.IP
.nf
\f[C]
> 1 * 2 + 1 * 2
4 (dimensionless)
> 12 meters + 5 feet
13.524 m (length)
\f[R]
.fi
.PP
These have lower precedence than multiplication and division.
.SS TEMPERATURES
.IP
.nf
\f[C]
> 12 °C
285.15 K (temperature)
\f[R]
.fi
.PP
Temperature scales are operators with higher precedence than addition,
and lower than multiplication.
See the section on temperature conversions for more detailed syntax.
.SS NUMBERS
.IP
.nf
\f[C]
> 9999999999999
approx. 9.99999e12 (dimensionless)
> 1.001
1.001 (dimensionless)
> 1e100
1.0e100 (dimensionless)
\f[R]
.fi
.PP
Numbers can be written with a fraction, and can be written in scientific
notation.
\f[V]1e24\f[R] is short for \f[V]1 * 10\[ha]24\f[R].
.SS POWERS
.IP
.nf
\f[C]
> 12 ft\[ha]2
435483/390625, approx. 1.114836 m\[ha]2 (area)
\f[R]
.fi
.PP
Powers have higher precedence than multiplication.
Both \f[V]\[ha]\f[R] and \f[V]**\f[R] can be used.
.SS INLINE UNIT DEFINITIONS
.IP
.nf
\f[C]
> ton -> rock = 10kg
45359237/500000, approx. 90.71847 rock (mass)
\f[R]
.fi
.PP
An equals expression is one which simultaneously defines a new unit with
the right-hand side, names it using the left-hand side, and then
produces it as its result.
This is useful for customizing the output of the right-hand side of a
conversion or converting into things that don\[aq]t currently have units
such as the amount of calories in a potato.
.SS CUSTOM BASE UNITS
.IP
.nf
\f[C]
> 12 \[aq]core\[aq] hour / 3 \[aq]core\[aq] -> minutes
240 minutes (time)
\f[R]
.fi
.PP
A unit name which is wrapped in quotation marks will not be checked for
whether it exists when it is evaluated.
This means you can wrap anything in quotes to in effect produce a new
\f[I]base unit\f[R] for the purposes of a single calculation.
This can be useful for doing calculations in terms of things which are
otherwise dimensionless.
.SS ACCESSING THE PREVIOUS RESULT
.IP
.nf
\f[C]
> 100 ohm + 50 ohm
150 ohm (resistance)
> ANS * 10 mA
1.5 volt (electrical_potential)
\f[R]
.fi
.PP
The result of the previous query can be accessed with \f[V]_\f[R],
\f[V]ans\f[R] or \f[V]ANS\f[R], which can be convenient for breaking up
calculations into multiple steps.
Note that when rink returns an error occurs, the previous result is
kept.
Also, currently only the results of mathematical expressions are stored,
the results for conversions aren\[aq]t.
.SH UNITS AND PREFIXES
.PP
Units can be prefixed with SI prefixes as well as a number of non-SI
prefixes, such as: quarter, double, kibi, mebi, ⅞.
.PP
Rink will accept plural units.
.SH TOP-LEVEL STATEMENTS
.SS CONVERSION (->)
.IP
.nf
\f[C]
> meter -> feet
3.280839 foot (length)
> 12 °C -> °F
53.6 °F (temperature)
\f[R]
.fi
.PP
The left hand side of the conversion is an arbitrary expression, and the
right hand side is one of:
.IP \[bu] 2
An arbitrary expression
.IP \[bu] 2
A temperature scale (celsius, fahrenheit, and several historical scales)
.IP \[bu] 2
A unit list (e.g.
hour;min;sec)
.SS UNIT LISTS
.IP
.nf
\f[C]
> 2\[ha]17 seconds -> hour;min;sec
36 hour, 24 minute, 32 s (time)
> 2 km -> mi;ft
1 mile, 1281.679 foot (length)
> liter -> cup;tbsp;tsp
4 uscup, 3 ustablespoon, 1.884136 usteaspoon (volume)
\f[R]
.fi
.PP
A unit list is a comma- or semicolon- delimited list of units with the
same dimensionality, which can be used for breaking down numbers into
more familiar quantities.
.SS TEMPERATURE
.IP
.nf
\f[C]
> 12 °C
285.15 K (temperature)
> 12 degC
285.15 K (temperature)
> 12 celsius
285.15 K (temperature)
\f[R]
.fi
.PP
Temperature scales in Rink are handled a little specially, because only
Kelvin and Rankine (the absolute zero version of Fahrenheit) start at
absolute zero.
As such, they are \f[I]operators\f[R], not units.
These operators have looser binding precedence than multiplication, but
tighter than addition.
.PP
Available temperature scales:
.IP \[bu] 2
\f[V]degC\f[R], \f[V]°C\f[R], \f[V]celsius\f[R], \f[V]℃\f[R]:
\f[B]Celsius\f[R], the standard scale in most countries.
.IP \[bu] 2
\f[V]degF\f[R], \f[V]°F\f[R], \f[V]fahrenheit\f[R], \f[V]℉\f[R]:
\f[B]Fahrenheit\f[R], the scale used in households across the United
States.
.IP \[bu] 2
\f[V]degRé\f[R], \f[V]°Ré\f[R], \f[V]degRe\f[R], \f[V]°Re\f[R],
\f[V]réaumur\f[R], \f[V]reaumur\f[R]: \f[B]Réaumur\f[R]: A historical
scale once used throughout Europe.
.IP \[bu] 2
\f[V]degRø\f[R], \f[V]°Rø\f[R], \f[V]degRo\f[R], \f[V]°Ro\f[R],
\f[V]rømer\f[R], \f[V]romer\f[R]: \f[B]Romer\f[R]: Yet another
historical scale.
.IP \[bu] 2
\f[V]degN\f[R], \f[V]°N\f[R], \f[V]degnewton\f[R]: \f[B]Newton\f[R]: A
historical scale created by Isaac Newton.
.IP \[bu] 2
\f[V]degDe\f[R], \f[V]°De\f[R], \f[V]delisle\f[R]: \f[B]Delisle\f[R]: A
historical scale which, alongside the original Celsius scale, is
reversed from the scales we are used to today.
Its zero point is boiling water, and the freezing point of water is
150°De.
.PP
Note that these temperature scale measurements are \f[I]absolute\f[R]
measurements, not \f[I]differences\f[R].
If you wish to say something like \[dq]a difference of 1°C\[dq], then
you must use the absolute scale for the scale you\[aq]re using.
These are:
.IP \[bu] 2
For Celsius, kelvin \f[V]K\f[R]
.IP \[bu] 2
For Fahrenheit, Rankine \f[V]degR\f[R]
.IP \[bu] 2
For Réaumur, \f[V]reaumur_absolute\f[R] (absolute as in the zero point
is absolute zero)
.IP \[bu] 2
For Rømer, \f[V]romer_absolute\f[R]
.IP \[bu] 2
For Newton, \f[V]newton_absolute\f[R]
.IP \[bu] 2
For Delisle, \f[V]delisle_absolute\f[R]
.SS BASES
.IP
.nf
\f[C]
> 1000 -> hex
3e8 (dimensionless)
> 10000 -> base 36
7ps (dimensionless)
> pi meter -> hex meter
approx. 3.243f6a meter (length)
\f[R]
.fi
.PP
Base modifiers are specified with \f[V]base\f[R] followed by a number,
followed by the rest of your conversion.
Allowed bases are currently 2 through 36.
There are some special base names which are also recognized:
.IP \[bu] 2
\f[V]hex\f[R], \f[V]hexadecimal\f[R], \f[V]base16\f[R] for base 16.
.IP \[bu] 2
\f[V]oct\f[R], \f[V]octal\f[R], \f[V]base8\f[R] for base 8.
.IP \[bu] 2
\f[V]bin\f[R], \f[V]binary\f[R], \f[V]base2\f[R] for base 2.
.SS DIGITS
.IP
.nf
\f[C]
> 2\[ha]128 -> digits
340282366920938463463374607431768211456 (dimensionless)
> 1/7 -> digits 50
1/7, approx. 0.1428571428571428571428571428571428571428571428571428 (dimensionless)
> googol -> digits
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (dimensionless)
\f[R]
.fi
.PP
Digits modifiers are specified with \f[V]digits\f[R] optionally followed
by a number, before the base modifier and before the rest of the
conversion.
Any number of digits are allowed, but large amounts may not succeed.
.PP
The function of this modifier is that it forces the entire integer part
to be printed (i.e., scientific notation will \f[I]not\f[R] be used),
and then it prints an additional \f[I]n\f[R] digits, using the default
if not specified.
.PP
Trancendental numbers currently cannot be precisely represented, so
asking for many digits of pi or e will produce unsatisfying results.
.PP
Trigonometric and logarithmic functions are currently implemented using
a machine-float fallback, because their results cannot be precisely
represented as finite rationals.
Because of this, asking for many digits of such numbers will also
produce unsatisfying results.
.SS UNIT FINDING
.IP
.nf
\f[C]
> units for power
Units for kg m\[ha]2 / s\[ha]3 (power): VA, airwatt, boilerhorsepower, brhorsepower,
donkeypower, electrichorsepower, horsepower, lusec, mbh, metrichorsepower,
poncelet, sccm, sccs, scfh, scfm, slph, slpm, solarluminosity,
tonrefrigeration, waterhorsepower, watt
\f[R]
.fi
.PP
The \f[V]units for\f[R], \f[V]units of\f[R], and \f[V]units\f[R]
commands will find more units which match the dimensionality of the one
specified.
.SS FACTORIZATION
.IP
.nf
\f[C]
> factorize velocity
Factorizations: velocity;  frequency length;  area viscosity;
acceleration time;  length\[ha]2 viscosity
> factorize power
Factorizations: power;  force velocity;  radiant_intensity solid_angle;
area radiosity;  length spectral_flux_wavelength;  radiation_dose spectral_exposure_frequency;
spectral_irradiance_wavelength volume;  temperature thermal_conductance;
energy frequency;  current\[ha]2 resistance;  ...
\f[R]
.fi
.PP
Unit factorization is what Rink names the process of finding quantities
which can be multiplied together to produce the original quantity.
This can be useful for discovering new ways to construct a unit.
.SS SEARCH
.IP
.nf
\f[C]
> search milk
Search results: milk (density), mil (length), mile (length), mill (dimensionless), mi (length)
\f[R]
.fi
.PP
Allows you to search for units based on their names, returning up to 5
results and showing the associated physical quantity of the unit.
.SH DATES
.IP
.nf
\f[C]
> #jan 01, 1970#
1970-01-01 00:00:00 +00:00 (46 years ago)
> now - #jan 01, 1970# -> gigaseconds
1.472083 gigaseconds (time)
> #2016-08-24# + 500 weeks
2026-03-25 00:00:00 +00:00 (in 9 years)
\f[R]
.fi
.PP
In addition to handling units, Rink is also capable of doing some
calculations with dates and times.
.PP
Converting to a timezone:
.IP
.nf
\f[C]
> now
2022-08-08 21:19:56.990897100 -07:00 (now)
> now -> \[dq]Europe/London\[dq]
2022-08-09 05:20:03.656075600 BST (now)
\f[R]
.fi
.PP
Converting to a fixed offset:
.IP
.nf
\f[C]
> now -> +01:00
2022-08-09 05:20:30.080703900 +01:00 (now)
\f[R]
.fi
.PP
Inputting a time with an offset:
.IP
.nf
\f[C]
> #apr 1, 2016 12:00:00 +01:00#
2016-04-01 12:00:00 +01:00 (6 years ago)
\f[R]
.fi
.SH SUBSTANCES
.IP
.nf
\f[C]
> milk
milk: density = 242 gram -> approx. 236588.2 millimeter\[ha]3
> gallon milk
milk: volume = approx. 3785411.7 millimeter\[ha]3; mass = 3.872 kilogram
> egg
egg: USA large egg. mass_shelled = 50 gram; mass_white = 30 gram;
mass_yolk = 18.6 gram; volume = approx. 46824.75 millimeter\[ha]3;
volume_white = approx. 29573.52 millimeter\[ha]3;
volume_yolk = approx. 17251.22 millimeter\[ha]3
> egg_shelled of kg egg
20 (dimensionless)
> gallon gasoline -> btu
gasoline: volume = approx. 3785411.7 millimeter\[ha]3; energy_HHV = 125000 btu; energy_LHV = 115000 btu
\f[R]
.fi
.PP
Substances are how Rink organizes the physical properties of materials,
objects, both countable and uncountable.
Each substance has a name, an associated amount (defaulting to
dimensionless 1), and a set of associated properties.
.PP
Each property maps a named input into a named output and vice versa, and
has a name itself.
Countable objects often have properties with an input being
dimensionless, so that you do not need to specify an amount to extract
the property.
.PP
The properties of a substance are accessed with the \f[V]of\f[R]
operator (\f[I]property\f[R] \f[B]of\f[R] \f[I]substance\f[R]), which
reads a multiplication expression following it, so you may have to wrap
it in parentheses.
.PP
Substances can be used in conversions, and can be added and multiplied
to transform them.
Multiplication will change the amount of the substance you have, so that
you can write \f[V]kg egg\f[R] to specify one kilogram of eggs.
Addition will combine certain properties (currently only
\f[V]molar_mass\f[R]) to create a new substance entirely.
Conversions of substances allow you to get multiple results
simultaneously, for example if there are multiple different measurements
of some property of the substance available.
.PP
If the result of a calculation results in a substance, Rink will show
all of the properties applicable for the given amount.
.SH INDEX OF UNITS
.PP
The full list of units is specified in the file
\f[V]definitions.units\f[R] (https://github.com/tiffany352/rink-rs/blob/master/definitions.units),
but a small list of the most helpful ones will be listed here.
It is intended that most units should be easy to guess the names of.
.SS OFFICIAL SI DERIVED UNITS
.IP \[bu] 2
Newton \f[V]N\f[R] (force)
.IP \[bu] 2
Pascal \f[V]Pa\f[R] (pressure)
.IP \[bu] 2
Joule \f[V]J\f[R] (energy)
.IP \[bu] 2
Watt \f[V]W\f[R] (power)
.IP \[bu] 2
Coulomb \f[V]C\f[R] (charge)
.IP \[bu] 2
Volt \f[V]V\f[R] (electrical potential)
.IP \[bu] 2
Ohm (electrical resistance)
.IP \[bu] 2
Siemens \f[V]S\f[R] (electrical conductance)
.IP \[bu] 2
Farad \f[V]F\f[R] (capacitance)
.IP \[bu] 2
Weber \f[V]Wb\f[R] (magnetic flux)
.IP \[bu] 2
Henry \f[V]H\f[R] (inductance)
.IP \[bu] 2
Tesla \f[V]T\f[R] (magnetic flux density)
.IP \[bu] 2
Hertz \f[V]Hz\f[R] (frequency)
.IP \[bu] 2
Lumen \f[V]lm\f[R] (luminous flux)
.IP \[bu] 2
Lux \f[V]lx\f[R] (illuminance)
.IP \[bu] 2
Gray \f[V]Gy\f[R] (radiation dose)
.IP \[bu] 2
Katal \f[V]kat\f[R] (catalytic activity)
.SS SUBSTANCES
.IP \[bu] 2
Water \f[V]water\f[R]
.IP \[bu] 2
Mercury (Hg) \f[V]mercury\f[R]
.IP \[bu] 2
Compounds and materials
.RS 2
.IP \[bu] 2
Ammonia \f[V]ammonia\f[R]
.IP \[bu] 2
Freon \f[V]freon\f[R]
.IP \[bu] 2
Tissue \f[V]tissue\f[R]
.IP \[bu] 2
Diamond \f[V]diamond\f[R]
.IP \[bu] 2
Graphite \f[V]graphite\f[R]
.IP \[bu] 2
Water ice \f[V]ice\f[R]
.IP \[bu] 2
Asphalt \f[V]asphalt\f[R]
.IP \[bu] 2
Brick \f[V]brick\f[R]
.IP \[bu] 2
Concrete \f[V]cocnrete\f[R]
.IP \[bu] 2
Silica glass \f[V]glass_silica\f[R]
.IP \[bu] 2
Flint glass \f[V]glass_flint\f[R]
.IP \[bu] 2
Pyrex glass \f[V]glass_pyrex\f[R]
.IP \[bu] 2
Gypsum \f[V]gypsum\f[R]
.IP \[bu] 2
Marble \f[V]marble\f[R]
.IP \[bu] 2
Sand \f[V]sand\f[R]
.IP \[bu] 2
Soil \f[V]soil\f[R]
.IP \[bu] 2
Air \f[V]air\f[R]
.RE
.IP \[bu] 2
Particles
.RS 2
.IP \[bu] 2
Electron \f[V]electron\f[R]
.IP \[bu] 2
Proton \f[V]proton\f[R]
.IP \[bu] 2
Neutron \f[V]neutron\f[R]
.IP \[bu] 2
Deuterium nucleus \f[V]deuteron\f[R]
.IP \[bu] 2
Muon \f[V]muon\f[R]
.IP \[bu] 2
Helium nucleus \f[V]helion\f[R]
.IP \[bu] 2
Tau \f[V]tauparticle\f[R]
.IP \[bu] 2
Alpha \f[V]alphaparticle\f[R]
.IP \[bu] 2
Tritium nucleus \f[V]triton\f[R]
.RE
.IP \[bu] 2
Celestial bodies
.RS 2
.IP \[bu] 2
Sun \f[V]sun\f[R]
.IP \[bu] 2
Mercury \f[V]mercury_planet\f[R]
.IP \[bu] 2
Venus \f[V]venus\f[R]
.IP \[bu] 2
Earth \f[V]earth\f[R]
.IP \[bu] 2
Earth\[aq]s moon \f[V]moon\f[R]
.IP \[bu] 2
Mars \f[V]mars\f[R]
.IP \[bu] 2
Jupiter \f[V]jupiter\f[R]
.IP \[bu] 2
Saturn \f[V]saturn\f[R]
.IP \[bu] 2
Uranus \f[V]uranus\f[R]
.IP \[bu] 2
Neptune \f[V]neptune\f[R]
.IP \[bu] 2
Pluto \f[V]pluto\f[R]
.RE
.IP \[bu] 2
Fuels
.RS 2
.IP \[bu] 2
Crude oil \f[V]oil\f[R]
.IP \[bu] 2
Coal \f[V]coal\f[R]
.IP \[bu] 2
Natural gas \f[V]naturalgas\f[R]
.IP \[bu] 2
Charcoal \f[V]charcoal\f[R]
.IP \[bu] 2
Wood \f[V]wood\f[R]
.IP \[bu] 2
Ethanol \f[V]ethanol\f[R]
.IP \[bu] 2
Diesel \f[V]diesel\f[R]
.IP \[bu] 2
Gasoline \f[V]gasoline\f[R]
.IP \[bu] 2
Heating oil \f[V]heating_oil\f[R]
.IP \[bu] 2
Fuel oil \f[V]fueloil\f[R]
.IP \[bu] 2
Propane \f[V]propane\f[R]
.IP \[bu] 2
Butane \f[V]butane\f[R]
.RE
.IP \[bu] 2
Foods
.RS 2
.IP \[bu] 2
Butter \f[V]butter\f[R]
.IP \[bu] 2
Clarified butter \f[V]butter_clarified\f[R]
.IP \[bu] 2
Cocoa butter \f[V]cocoa_butter\f[R]
.IP \[bu] 2
Vegetable shortening \f[V]shortening\f[R]
.IP \[bu] 2
Vegetable oil \f[V]vegetable_oil\f[R]
.IP \[bu] 2
Olive oil \f[V]olive_oil\f[R]
.IP \[bu] 2
Flour \f[V]cakeflour\f[R], \f[V]flour\f[R], \f[V]breadflour\f[R]
.IP \[bu] 2
Corn starch \f[V]cornstarch\f[R]
.IP \[bu] 2
Cocoa \f[V]dutchcocoa\f[R], \f[V]cocoa\f[R]
.IP \[bu] 2
Heavy cream \f[V]heavycream\f[R]
.IP \[bu] 2
Milk \f[V]milk\f[R]
.IP \[bu] 2
Sour cream \f[V]sourcream\f[R]
.IP \[bu] 2
Molasses \f[V]molasses\f[R]
.IP \[bu] 2
Corn syrup \f[V]corrnsyrup\f[R]
.IP \[bu] 2
Honey \f[V]honey\f[R]
.IP \[bu] 2
Sugar \f[V]sugar\f[R]
.IP \[bu] 2
Powdered sugar \f[V]powdered_sugar\f[R]
.IP \[bu] 2
Brown sugar \f[V]brownsugar_light\f[R], \f[V]brownsugar_dark\f[R]
.IP \[bu] 2
Baking powder \f[V]baking_powder\f[R]
.IP \[bu] 2
Salt \f[V]salt\f[R], \f[V]koshersalt\f[R]
.IP \[bu] 2
Egg \f[V]egg\f[R]
.RE
.IP \[bu] 2
Elements 1 through 118, by name (e.g.
\f[V]helium\f[R])
.SS CONSTANTS
.IP \[bu] 2
Pi \f[V]pi\f[R]
.IP \[bu] 2
Speed of light \f[V]c\f[R]
.IP \[bu] 2
Planck Constant \f[V]planck_constant\f[R]
.IP \[bu] 2
Gravitational Constant \f[V]G\f[R]
.IP \[bu] 2
Avogadro\[aq]s number \f[V]avogadro\f[R]
.IP \[bu] 2
Gas Constant \f[V]gasconstant\f[R]
.IP \[bu] 2
Boltzmann Constant \f[V]boltzmann\f[R]
.IP \[bu] 2
Earth Gravity \f[V]gravity\f[R], \f[V]force\f[R]
.IP \[bu] 2
Earth Atmosphere Density \f[V]atm\f[R]
.SS CURRENCIES
.PP
These are only enabled if Rink was compiled with support for currencies.
.IP \[bu] 2
EU Euro \f[V]EUR\f[R], \f[V]€\f[R]
.IP \[bu] 2
US dollar \f[V]USD\f[R], \f[V]$\f[R], \f[V]dollar\f[R]
.IP \[bu] 2
Japan yen \f[V]JPY\f[R], \f[V]¥\f[R], \f[V]yen\f[R]
.IP \[bu] 2
Bulgaria lev \f[V]BGN\f[R]
.IP \[bu] 2
Czech koruna \f[V]CZK\f[R]
.IP \[bu] 2
Denmark kroner \f[V]DKK\f[R]
.IP \[bu] 2
UK pound \f[V]GBP\f[R], \f[V]£\f[R]
.IP \[bu] 2
Hungary forint \f[V]HUF\f[R]
.IP \[bu] 2
Poland złoty \f[V]PLN\f[R]
.IP \[bu] 2
Romania lei \f[V]RON\f[R]
.IP \[bu] 2
Sweden krona \f[V]SEK\f[R]
.IP \[bu] 2
Switzerland franc \f[V]CHF\f[R]
.IP \[bu] 2
Norway krone \f[V]NOK\f[R]
.IP \[bu] 2
Croatia kuna \f[V]HRK\f[R]
.IP \[bu] 2
Russia ruble \f[V]RUB\f[R], \f[V]₽\f[R]
.IP \[bu] 2
Turkey lira \f[V]TRY\f[R], \f[V]₺\f[R]
.IP \[bu] 2
Australia dollar \f[V]AUD\f[R], \f[V]A$\f[R]
.IP \[bu] 2
Brazil real \f[V]BRL\f[R], \f[V]R$\f[R]
.IP \[bu] 2
Canada dollar \f[V]CAD\f[R], \f[V]C$\f[R]
.IP \[bu] 2
PRC yuan \f[V]CNY\f[R]
.IP \[bu] 2
Hong Kong dollar \f[V]HKD\f[R], \f[V]H$\f[R]
.IP \[bu] 2
Indonesia rupiah \f[V]IDR\f[R]
.IP \[bu] 2
Israel shekel \f[V]ILS\f[R], \f[V]₪\f[R]
.IP \[bu] 2
India rupee \f[V]INR\f[R], \f[V]₹\f[R]
.IP \[bu] 2
South Korea won \f[V]₩\f[R]
.IP \[bu] 2
Mexico dollar \f[V]MXN\f[R], \f[V]mex$\f[R]
.IP \[bu] 2
Malaysia ringgit \f[V]MYR\f[R]
.IP \[bu] 2
New Zealand dollar \f[V]NZD\f[R], \f[V]NZ$\f[R]
.IP \[bu] 2
Phillipines piso \f[V]PHP\f[R], \f[V]₱\f[R]
.IP \[bu] 2
Singapore dollar \f[V]SGD\f[R], \f[V]S$\f[R]
.IP \[bu] 2
Thailand baht \f[V]THB\f[R], \f[V]฿\f[R]
.IP \[bu] 2
South Africa rand \f[V]ZAR\f[R]
.SS FUNCTIONS
.PP
Currently, all of these result in machine float fallback, because their
results are real numbers that cannot be precisely represented as
rationals.
.IP \[bu] 2
\f[V]sqrt(x)\f[R]: Square root, √x.
.IP \[bu] 2
\f[V]exp(x)\f[R]: The exponential function, e\[ha]x.
.IP \[bu] 2
\f[V]ln(x)\f[R]: The natural logarithm, log_e(x).
.IP \[bu] 2
\f[V]log(x,y)\f[R]: Logarithm in base \f[I]y\f[R], log_y(x).
.IP \[bu] 2
\f[V]log2(x)\f[R]: Logarithm in base 2, log_2(x).
.IP \[bu] 2
\f[V]log10(x)\f[R]: Logarithm in base 10, log_10(x).
.IP \[bu] 2
\f[V]hypot(x,y)\f[R]: The length of the hypotenuse of a right-angle
triangle given adjacent edges of length x and y.
.IP \[bu] 2
\f[V]sin(x)\f[R]: The sine function.
.IP \[bu] 2
\f[V]cos(x)\f[R]: The cosine function.
.IP \[bu] 2
\f[V]tan(x)\f[R]: The tangent function.
.IP \[bu] 2
\f[V]asin(x)\f[R]: Inverse sine, or arcsine.
.IP \[bu] 2
\f[V]acos(x)\f[R]: Inverse cosine, or arccosine.
.IP \[bu] 2
\f[V]atan(x)\f[R]: Inverse tangent, or arctangent.
.IP \[bu] 2
\f[V]atan2(x, y)\f[R]: Four-quadrant arctangent, which can be used to
reverse sine+cosine back into an angle.
.IP \[bu] 2
\f[V]sinh(x)\f[R]: Hyperbolic sine.
.IP \[bu] 2
\f[V]cosh(x)\f[R]: Hyperbolic cosine.
.IP \[bu] 2
\f[V]tanh(x)\f[R]: Hyperbolic tangent.
.IP \[bu] 2
\f[V]asinh(x)\f[R]: Inverse hyperbolic sine function.
.IP \[bu] 2
\f[V]acosh(x)\f[R]: Inverse hyperbolic cosine function.
.IP \[bu] 2
\f[V]atanh(x)\f[R]: Inverse hyperbolic tangent function.
.SH AUTHORS
Tiffany Bennett, Fredrick R. Brennan (responsible for the inclusion of
this man page only), and Rink Contributors:
<https://github.com/tiffany352/rink-rs>.
